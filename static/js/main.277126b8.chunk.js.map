{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","api/users.js","index.js"],"names":["BASE_URL","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","getPosts","PostsList","selectedUserId","setPostId","setPostOpen","isPostOpen","useState","posts","setPosts","selectedPostId","setSelectedPostId","useEffect","userId","filter","post","handleCloseButton","className","map","id","title","key","type","onClick","handleOpenButton","NewCommentForm","name","placeholder","PostDetails","App","users","setUsers","setSelectedUserId","postId","sort","previous","next","slice","onChange","clickEvent","value","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.277126b8.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(url, options) {\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data);\n}\n","import { BASE_URL, request } from './api';\n\nexport function getPosts() {\n  return request(`${BASE_URL}/posts`);\n}\n\nexport function getUserPosts(userId) {\n  return getPosts()\n    .then(posts => posts.filter(post => (\n      post.userId === userId\n    )));\n}\n\nexport function getPostDetails(postId) {\n  return request(`${BASE_URL}/posts/${postId}`);\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts, getPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  selectedUserId,\n  setPostId,\n  isPostOpen,\n  setPostOpen,\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState('');\n\n  useEffect(() => {\n    if (!selectedUserId) {\n      getPosts().then(setPosts);\n    } else {\n      getUserPosts(selectedUserId).then(setPosts);\n    }\n  }, [selectedUserId]);\n\n  const handleOpenButton = (id) => {\n    setPostOpen(false);\n    setSelectedPostId(id);\n    setPostId(id);\n  };\n\n  const handleCloseButton = () => {\n    setPostOpen(true);\n    setSelectedPostId('');\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(({ id, userId, title }) => (\n          <li className=\"PostsList__item\" key={id}>\n            <div>\n              <b>\n                [User #\n                {userId}\n                ]:\n              </b>\n              {title || 'No title'}\n            </div>\n            {selectedPostId !== id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenButton(id)}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={handleCloseButton}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedUserId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n  isPostOpen: PropTypes.bool.isRequired,\n  setPostOpen: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = () => (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>sunt aut facere repellat provident occaecati excepturi optio</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button type=\"button\" className=\"button\">Hide 2 comments</button>\n\n      <ul className=\"PostDetails__list\">\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>My first comment</p>\n        </li>\n\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>sad sds dfsadf asdf asdf</p>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm />\n      </div>\n    </section>\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nexport const App = () => {\n  const [users, setUsers] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [postId, setPostId] = useState('');\n  const [isPostOpen, setPostOpen] = useState(true);\n\n  useEffect(() => {\n    getUsers().then(setUsers);\n  }, []);\n\n  const handleChange = (clickEvent) => {\n    const { value } = clickEvent.target;\n\n    setSelectedUserId(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        {users ? (\n          <label>\n            Select a user: &nbsp;\n\n            <select\n              className=\"App__user-selector\"\n              onChange={handleChange}\n            >\n              <option value=\"0\">All users</option>\n              {users.map(({ name, id }) => (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n        ) : (\n          <span>Users are not loaded</span>\n        )}\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={Number(selectedUserId)}\n            setPostId={setPostId}\n            isPostOpen={isPostOpen}\n            setPostOpen={setPostOpen}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {isPostOpen && (\n            <PostDetails\n              postId={Number(postId)}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { BASE_URL, request } from './api';\n\nexport function getUsers() {\n  return request(`${BASE_URL}/users`)\n    .then(users => users.sort((previous, next) => (previous.id - next.id)))\n    .then(users => users.slice(0, 10));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}